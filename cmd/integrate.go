/*
Copyright Â© 2025 Alireza Arzehgar <alirezaarzehgar82@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
*/
package cmd

import (
	"log"
	"os"
	"path"
	"text/template"

	"github.com/spf13/cobra"
)

var (
	integrateMpvParams struct {
		Options  string
		Shortcut string
	}
)

var integrateMpvCmd = &cobra.Command{
	Use:   "mpv",
	Short: "MPV - a media player",
	Run: func(cmd *cobra.Command, args []string) {
		scriptsDir := path.Join(os.Getenv("HOME"), ".config/mpv/scripts/")
		extPath := path.Join(scriptsDir, "iflashc.lua")

		err := os.MkdirAll(scriptsDir, os.ModePerm)
		if err != nil {
			log.Fatalf("failed to create scripts dir: %s", err)
		}

		out, err := os.Create(extPath)
		if err != nil {
			log.Fatalf("failed to create extension file: %s\n", err)
		}
		defer out.Close()

		t := template.New("mpv extension")
		t.Parse(`-- GENERATED BY iflashc integrate mpv
local mp = require 'mp'

function run_command()
    local subtitle = mp.get_property("sub-text")
    if subtitle and subtitle ~= "" then
    	os.execute("iflashc {{.Options}} --input=\""..subtitle:gsub("\n", " ").."\"")
    end
end

mp.add_key_binding("{{ .Shortcut }}", "run-command", run_command)
`)
		err = t.Execute(out, integrateMpvParams)
		if err != nil {
			log.Fatalf("failed to create template: %s\n", err)
		}
	},
}

// integrateCmd represents the integrate command
var integrateCmd = &cobra.Command{
	Use:   "integrate",
	Short: "integrate iflashc with other systems",
}

func init() {
	integrateMpvCmd.PersistentFlags().StringVar(&integrateMpvParams.Options, "options", "--nodb --translator=google", "set iflashc options for extension")
	integrateMpvCmd.PersistentFlags().StringVar(&integrateMpvParams.Shortcut, "shortcut", "ctrl+i", "set mpv shortcut for extension")

	integrateCmd.AddCommand(integrateMpvCmd)
	rootCmd.AddCommand(integrateCmd)
}
